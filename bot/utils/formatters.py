# ===============================================================
# –§–∞–π–ª: bot/utils/formatters.py (–ù–û–í–´–ô –§–ê–ô–õ)
# –û–ø–∏—Å–∞–Ω–∏–µ: –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–µ–∫—Å—Ç –¥–ª—è Telegram.
# ===============================================================
from bot.utils.models import AsicMiner, PriceInfo

def format_asic_passport(asic: AsicMiner, electricity_cost: float) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–∞—Å–ø–æ—Ä—Ç –¥–ª—è ASIC —Å —Ä–∞—Å—á–µ—Ç–æ–º —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏."""
    specs_map = {
        "algorithm": "–ê–ª–≥–æ—Ä–∏—Ç–º", "hashrate": "–•–µ—à—Ä–µ–π—Ç",
        "power": "–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ", "efficiency": "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
    }
    specs_list = []
    for key, rus_name in specs_map.items():
        value = getattr(asic, key, None)
        if value and value != "N/A":
            unit = " –í—Ç" if key == "power" else ""
            specs_list.append(f" ‚ñ´Ô∏è <b>{rus_name}:</b> {value}{unit}")
    specs_text = "\n".join(specs_list)

    profit_text = (
        f" ‚ñ™Ô∏è <b>–î–æ—Ö–æ–¥ (–≥—Ä—è–∑–Ω—ã–º–∏):</b> ${asic.gross_profit:.2f}/–¥–µ–Ω—å\n"
        f" ‚ñ™Ô∏è <b>–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —ç/—ç:</b> ${asic.electricity_cost_per_day:.2f}/–¥–µ–Ω—å\n"
        f" ‚ñ™Ô∏è <b>–î–æ—Ö–æ–¥ (—á–∏—Å—Ç—ã–º–∏):</b> ${asic.net_profit:.2f}/–¥–µ–Ω—å\n"
        f" <i>(–ø—Ä–∏ —Ü–µ–Ω–µ —ç/—ç ${electricity_cost:.4f}/–∫–í—Ç¬∑—á)</i>"
    )

    return (
        f"üìã <b>–ü–∞—Å–ø–æ—Ä—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {asic.name}</b>\n\n"
        f"<b><u>–≠–∫–æ–Ω–æ–º–∏–∫–∞:</u></b>\n{profit_text}\n\n"
        f"<b><u>–¢–µ—Ö. —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</u></b>\n{specs_text}\n"
    )

def format_price_info(price_info: PriceInfo) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–µ –º–æ–Ω–µ—Ç—ã."""
    change_24h = price_info.price_change_percentage_24h or 0
    emoji = "üìà" if change_24h >= 0 else "üìâ"
    
    market_cap_text = f"–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: <b>${price_info.market_cap:,.0f}</b>" if price_info.market_cap else ""
    
    return (
        f"üíé <b>{price_info.name} ({price_info.symbol.upper()})</b>\n\n"
        f"<b>–¶–µ–Ω–∞:</b> ${price_info.current_price:,.4f}\n"
        f"<b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ (24—á):</b> {change_24h:.2f}% {emoji}\n\n"
        f"{market_cap_text}"
    )
