# ===============================================================
# –§–∞–π–ª: bot/main.py (–ü–†–û–î–ê–ö–®–ù-–í–ï–†–°–ò–Ø 2025 - –ì–ï–ù–ò–ô 2.0)
# –û–ø–∏—Å–∞–Ω–∏–µ: –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç
# –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–æ—É—Ç–µ—Ä—ã —Å —É—á–µ—Ç–æ–º feature flags
# –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å.
# ===============================================================
import asyncio
import logging

from aiogram import Bot
from aiogram.types import BotCommand, BotCommandScopeDefault

from bot.config.settings import settings
from bot.utils.dependencies import deps
from bot.utils.logging_setup import setup_logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–∞—à–∏ —Ä–æ—É—Ç–µ—Ä—ã
from bot.handlers.public import (
    common_handler, asic_handler, price_handler, market_data_handler,
    news_handler, quiz_handler, crypto_center_handler, market_handler,
    achievements_handler
)
from bot.handlers.admin import (
    admin_menu, moderation_handler, stats_handler, game_admin_handler
)
from bot.handlers.game import mining_game_handler
from bot.handlers.tools import calculator_handler
from bot.handlers.threats import threat_handler

async def notify_admin(bot: Bot, message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º MarkdownV2 –¥–ª—è –±–æ–ª—å—à–µ–π –≥–∏–±–∫–æ—Å—Ç–∏
        await bot.send_message(settings.admin.admin_chat_id, f"ü§ñ *–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ*\n\n{message}", parse_mode="MarkdownV2")
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

async def set_bot_commands(bot: Bot):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã, –≤–∏–¥–∏–º—ã–µ –≤ –º–µ–Ω—é Telegram."""
    commands = [
        BotCommand(command="start", description="üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ / –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand(command="help", description="‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º"),
        BotCommand(command="market", description="üõí –†—ã–Ω–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"),
        BotCommand(command="achievements", description="üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"),
        BotCommand(command="crypto_center", description="üíé AI-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ (Crypto Center)")
    ]
    await bot.set_my_commands(commands, BotCommandScopeDefault())
    logging.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    logging.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    await deps.initialize()

    dp = deps.dp
    bot = deps.bot
    scheduler = deps.scheduler

    logging.info("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ middlewares (Throttling, Activity, Action Tracking)...")
    dp.update.middleware(deps.throttling_middleware)
    dp.update.middleware(deps.activity_middleware)
    dp.update.middleware(deps.action_tracking_middleware)

    logging.info("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤...")
    # --- –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã ---
    dp.include_router(admin_menu.admin_router)
    dp.include_router(stats_handler.stats_router)
    dp.include_router(moderation_handler.moderation_router)
    dp.include_router(game_admin_handler.router)

    # --- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ---
    dp.include_router(calculator_handler.calculator_router)

    # --- –ò–≥—Ä–æ–≤—ã–µ –º–æ–¥—É–ª–∏ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–ª–∞–≥–æ–≤) ---
    if settings.feature_flags.enable_mining_game:
        dp.include_router(mining_game_handler.game_router)
        dp.include_router(market_handler.router) # –†—ã–Ω–æ–∫ - —á–∞—Å—Ç—å –∏–≥—Ä—ã
        dp.include_router(achievements_handler.router) # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è - —á–∞—Å—Ç—å –∏–≥—Ä—ã
        logging.info("–ò–≥—Ä–æ–≤—ã–µ –º–æ–¥—É–ª–∏ (–ú–∞–π–Ω–∏–Ω–≥, –†—ã–Ω–æ–∫, –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è) –≤–∫–ª—é—á–µ–Ω—ã.")
    
    # --- AI-–º–æ–¥—É–ª–∏ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–ª–∞–≥–æ–≤) ---
    if settings.feature_flags.enable_crypto_center:
        dp.include_router(crypto_center_handler.router)
        logging.info("–ú–æ–¥—É–ª—å 'Crypto Center' –≤–∫–ª—é—á–µ–Ω.")

    # --- –ü—É–±–ª–∏—á–Ω—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã ---
    dp.include_router(common_handler.router)
    dp.include_router(asic_handler.router)
    dp.include_router(price_handler.router)
    dp.include_router(market_data_handler.router)
    dp.include_router(news_handler.router)
    dp.include_router(quiz_handler.router)
    
    # --- –†–æ—É—Ç–µ—Ä —É–≥—Ä–æ–∑ (—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–º, —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ) ---
    dp.include_router(threat_handler.threat_router)

    scheduler.start()
    logging.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω.")

    await set_bot_commands(bot)

    try:
        await notify_admin(bot, "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ\\.")
        logging.info("Bot started polling...")
        await dp.start_polling(bot, **deps.workflow_data)
    finally:
        logging.info("Bot is shutting down...")
        await notify_admin(bot, "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\\. –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã\\.")
        await deps.close()
        logging.info("All resources closed. Goodbye!")

if __name__ == "__main__":
    setup_logging(level=settings.app.log_level, format=settings.app.log_format)
    logging.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        logging.critical(f"–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑-–∑–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏: {e}", exc_info=True)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–±–æ–µ "–ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–æ–ª–∏"
        temp_bot_token = settings.api_keys.bot_token
        if temp_bot_token:
            temp_bot = Bot(token=temp_bot_token)
            error_message = f"üî¥ *–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê* üî¥\n\n–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑\\-–∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è:\n`{str(e)}`"
            asyncio.run(notify_admin(temp_bot, error_message))
            asyncio.run(temp_bot.session.close())