# bot/main.py
# –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
# –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã, –∞ —Ç–∞–∫–∂–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ
# –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Dependency Injection –≤ aiogram 3.

import asyncio
import logging

import redis.asyncio as redis
from aiohttp import ClientSession
from aiogram import Bot, Dispatcher, F
from aiogram.fsm.storage.redis import RedisStorage
from aiogram.types import BotCommand, BotCommandScopeDefault

from bot.config.settings import load_settings
from bot.handlers.admin.admin_menu import admin_router
from bot.handlers.public.common_handler import public_router
# –í–∞–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å
# from bot.handlers.game import game_router
# from bot.handlers.tools import tools_router
from bot.jobs.scheduled_tasks import setup_scheduler
from bot.middlewares.activity_middleware import UserActivityMiddleware
from bot.middlewares.throttling_middleware import ThrottlingMiddleware
from bot.utils.dependencies import Deps
from bot.utils.logging_setup import setup_logging

logger = logging.getLogger(__name__)


async def set_bot_commands(bot: Bot):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã, –≤–∏–¥–∏–º—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –º–µ–Ω—é Telegram."""
    commands = [
        BotCommand(command="start", description="üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="price", description="üìà –£–∑–Ω–∞—Ç—å –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"),
        Bot.get_my_commands(command="market", description="üìä –û–±–∑–æ—Ä —Ä—ã–Ω–∫–∞"),
        BotCommand(command="news", description="üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"),
    ]
    await bot.set_my_commands(commands, BotCommandScopeDefault())
    logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")


async def on_startup(bot: Bot, deps: Deps):
    """
    –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥, –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞,
    –ø–µ—Ä–≤–∏—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö.
    """
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await set_bot_commands(bot)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á
    setup_scheduler(deps)
    deps.scheduler.start()
    logger.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω.")

    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–Ω–µ—Ç –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏
    await deps.coin_list_service.update_coin_list()
    logger.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ.")


async def on_shutdown(deps: Deps):
    """
    –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞: –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞,
    –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å Redis –∏ HTTP —Å–µ—Å—Å–∏–∏.
    """
    logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...")
    if deps.scheduler.running:
        deps.scheduler.shutdown(wait=True)
        logger.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

    if deps.redis_pool:
        await deps.redis_pool.close()
        logger.info("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Redis –∑–∞–∫—Ä—ã—Ç–æ.")

    if deps.http_session and not deps.http_session.closed:
        await deps.http_session.close()
        logger.info("–°–µ—Å—Å–∏—è AIOHTTP –∑–∞–∫—Ä—ã—Ç–∞.")
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ—Ç–∞.
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç long-polling.
    """
    setup_logging()
    settings = load_settings()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π Redis –∏ FSM —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    redis_password = settings.app.redis.password.get_secret_value() if settings.app.redis.password else None
    redis_pool = redis.from_url(
        str(settings.app.redis.dsn),
        encoding="utf-8",
        decode_responses=True,
        password=redis_password
    )
    storage = RedisStorage(redis=redis_pool)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=settings.app.bot.token.get_secret_value(), parse_mode="HTML")
    dp = Dispatcher(storage=storage)

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è middleware
    dp.update.middleware(ThrottlingMiddleware(rate_limit=settings.throttling.rate_limit, redis_pool=redis_pool))
    dp.update.middleware(UserActivityMiddleware(redis_pool=redis_pool))

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
    dp.include_router(admin_router)
    dp.include_router(public_router)
    # dp.include_router(game_router)
    # dp.include_router(tools_router)
    logger.info("–†–æ—É—Ç–µ—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã.")

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏ —á–µ—Ä–µ–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    async with ClientSession() as http_session:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        deps = Deps.build(settings=settings, http_session=http_session, redis_pool=redis_pool)

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
        dp.startup.register(lambda bot_instance: on_startup(bot_instance, deps))
        dp.shutdown.register(lambda: on_shutdown(deps))

        # –ó–∞–ø—É—Å–∫ long-polling —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ —Ö—ç–Ω–¥–ª–µ—Ä—ã
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await dp.start_polling(bot, **deps.model_dump())


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {e}", exc_info=True)
