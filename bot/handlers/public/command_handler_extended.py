# =============================================================================
# –§–∞–π–ª: bot/handlers/public/command_handler_extended.py
# –í–µ—Ä—Å–∏—è: Extended FULL (29.10.2025)
# –û–ø–∏—Å–∞–Ω–∏–µ: –ü–û–õ–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Å 21 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
# =============================================================================

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode
from aiogram.utils.markdown import hbold, hcode, hlink
from loguru import logger
import time
from datetime import datetime
import random

# –í–∞–∂–Ω–æ: –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "router"
router = Router(name="command_handler_extended_router")


# ========== –û–°–ù–û–í–ù–´–ï –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–´–ï –ö–û–ú–ê–ù–î–´ ==========

@router.message(Command("about"))
async def handle_about(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ.
    """
    about_text = (
        f"{hbold('ü§ñ Mining AI Bot - –í–∞—à –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π –ü–æ–º–æ—â–Ω–∏–∫')}\n\n"
        f"{hbold('üìã –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:')}\n"
        f"üéÆ {hbold('–ò–≥—Ä–∞:')} –ú–∞–π–Ω–∏–Ω–≥-—Å–∏–º—É–ª—è—Ç–æ—Ä —Å ASIC-–∞–º–∏\n"
        f"üìä {hbold('–†—ã–Ω–æ–∫:')} –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –∏ –Ω–æ–≤–æ—Å—Ç–∏\n"
        f"üß† {hbold('–û–±—É—á–µ–Ω–∏–µ:')} –ö–≤–∏–∑—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        f"üèÜ {hbold('–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:')} –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n"
        f"üîß {hbold('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:')} –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã –∏ –∞–Ω–∞–ª–∏–∑\n\n"
        f"{hbold('üí° –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:')}\n"
        "‚ñ™Ô∏è –†–µ–∞–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
        "‚ñ™Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞\n"
        "‚ñ™Ô∏è –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\n"
        "‚ñ™Ô∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –Ω–∞–≥—Ä–∞–¥—ã\n"
        "‚ñ™Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n"
        "‚ñ™Ô∏è –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞\n\n"
        f"{hbold('üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:')}\n"
        f"–í–µ—Ä—Å–∏—è: {hcode('2.0.0 Production Ready FULL')}\n"
        f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {hcode('29 –æ–∫—Ç—è–±—Ä—è 2025')}\n"
        f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {hcode('Telegram Bot API')}\n"
        f"–ö–æ–º–∞–Ω–¥: {hcode('21 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö')}\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"
    )
    
    await message.answer(about_text, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /about")


@router.message(Command("stats"))
async def handle_stats(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.from_user.id
    user_name = message.from_user.full_name
    username = f"@{message.from_user.username}" if message.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω"
    
    stats_text = (
        f"{hbold('üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')}\n\n"
        f"{hbold('üë§ –ü—Ä–æ—Ñ–∏–ª—å:')}\n"
        f"üÜî ID: {hcode(str(user_id))}\n"
        f"üë§ –ò–º—è: {user_name}\n"
        f"üîñ Username: {username}\n\n"
        f"{hbold('üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')}\n"
        "‚ñ™Ô∏è /game - –ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "‚ñ™Ô∏è /achievements - –í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –Ω–∞–≥—Ä–∞–¥—ã\n"
        "‚ñ™Ô∏è /leaderboard - –†–µ–π—Ç–∏–Ω–≥–∏ –∏–≥—Ä–æ–∫–æ–≤\n"
        "‚ñ™Ô∏è /invite - –†–µ—Ñ–µ—Ä–∞–ª—ã –∏ –±–æ–Ω—É—Å—ã\n\n"
        f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {datetime.now().strftime('%d.%m.%Y')}"
    )
    
    await message.answer(stats_text, parse_mode=ParseMode.HTML)
    logger.info(f"User {user_id} requested /stats")


@router.message(Command("info"))
async def handle_info(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info - –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ.
    """
    info_text = (
        f"{hbold('‚ÑπÔ∏è Mining AI Bot - –ö—Ä–∞—Ç–∫–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')}\n\n"
        "üéØ {hbold('–ú–∏—Å—Å–∏—è:')}\n"
        "–°–¥–µ–ª–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è –≤—Å–µ—Ö!\n\n"
        "üöÄ {hbold('–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:')}\n"
        "‚ñ™Ô∏è –ò–≥—Ä–æ–≤–æ–π –º–∞–π–Ω–∏–Ω–≥-—Å–∏–º—É–ª—è—Ç–æ—Ä\n"
        "‚ñ™Ô∏è –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫–≤–∏–∑—ã\n"
        "‚ñ™Ô∏è –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
        "‚ñ™Ô∏è –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π\n"
        "‚ñ™Ô∏è –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n"
        "‚ñ™Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n"
        "‚ñ™Ô∏è –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞\n\n"
        "üí° {hbold('–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:')}\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
        "/game - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/invite - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π\n\n"
        "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –º–∞–π–Ω–µ—Ä–æ–≤! ‚õèÔ∏è"
    )
    
    await message.answer(info_text, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /info")


# ========== –ö–û–ú–ê–ù–î–´ –°–ü–ò–°–ö–û–í –ò –ù–ê–í–ò–ì–ê–¶–ò–ò ==========

@router.message(Command("commands"))
async def handle_commands(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /commands - –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏.
    """
    commands_text = (
        f"{hbold('üìã –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ (21 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö)')}\n\n"
        
        f"{hbold('üéÆ –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´')}\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞\n"
        "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n\n"
        
        f"{hbold('‚õèÔ∏è –ò–ì–†–ê –ò –ú–ê–ô–ù–ò–ù–ì')}\n"
        "/game - –ú–∞–π–Ω–∏–Ω–≥-–∏–≥—Ä–∞\n"
        "/achievements - –í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n"
        "/leaderboard - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤\n\n"
        
        f"{hbold('üìà –†–´–ù–û–ö –ò –ê–ù–ê–õ–ò–¢–ò–ö–ê')}\n"
        "/price - –¢–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        "/news - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–Ω–æ–≤–æ—Å—Ç–∏\n"
        "/chart - –ì—Ä–∞—Ñ–∏–∫–∏ —Ü–µ–Ω\n\n"
        
        f"{hbold('üß† –û–ë–£–ß–ï–ù–ò–ï')}\n"
        "/quiz - –ö—Ä–∏–ø—Ç–æ-–∫–≤–∏–∑\n"
        "/learn - –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n\n"
        
        f"{hbold('‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø')}\n"
        "/about - –ü–æ–¥—Ä–æ–±–Ω–æ –æ –±–æ—Ç–µ\n"
        "/info - –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        "/version - –í–µ—Ä—Å–∏—è –±–æ—Ç–∞\n"
        "/commands - –≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫\n"
        "/faq - –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n"
        "/roadmap - –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞\n\n"
        
        f"{hbold('üîß –£–¢–ò–õ–ò–¢–´')}\n"
        "/ping - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏\n"
        "/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º\n"
        "/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n"
        "/feedback - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n"
        "/support - –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        
        f"{hbold('üë• –°–û–¶–ò–ê–õ–¨–ù–û–ï')}\n"
        "/invite - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üéÅ\n"
        "/community - –ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ\n"
        "/events - –°–æ–±—ã—Ç–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã\n\n"
        
        f"{hbold('üíé –ü–†–ï–ú–ò–£–ú')}\n"
        "/premium - –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞\n"
        "/donate - –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç\n\n"
        
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"
    )
    
    await message.answer(commands_text, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /commands")


# ========== –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ö–û–ú–ê–ù–î–´ ==========

@router.message(Command("version"))
async def handle_version(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /version - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏.
    """
    version_text = (
        f"{hbold('üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏')}\n\n"
        f"{hbold('üì¶ –í–µ—Ä—Å–∏—è –±–æ—Ç–∞:')}\n"
        f"Version: {hcode('2.0.0 FULL')}\n"
        f"Release: {hcode('Production Ready')}\n"
        f"Build Date: {hcode('29 October 2025')}\n"
        f"Commands: {hcode('21 extended + base')}\n\n"
        f"{hbold('üêç –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:')}\n"
        f"Python: {hcode('3.10+')}\n"
        f"aiogram: {hcode('3.22.0')}\n"
        f"Redis: {hcode('Latest')}\n"
        f"Platform: {hcode('Render.com')}\n\n"
        f"{hbold('‚ú® –ù–æ–≤–æ–µ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏:')}\n"
        "‚ñ™Ô∏è 21 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n"
        "‚ñ™Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n"
        "‚ñ™Ô∏è –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞\n"
        "‚ñ™Ô∏è –°–æ–±—ã—Ç–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã\n"
        "‚ñ™Ô∏è –°–∏—Å—Ç–µ–º–∞ –¥–æ–Ω–∞—Ç–æ–≤\n"
        "‚ñ™Ô∏è –£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n\n"
        f"{hbold('üìä –°—Ç–∞—Ç—É—Å:')}\n"
        f"–†–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: {hcode('‚úÖ Online')}\n"
        f"Uptime: {hcode('99.9%')}\n"
    )
    
    await message.answer(version_text, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /version")


@router.message(Command("ping"))
async def handle_ping(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ping - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ—Ç–∫–ª–∏–∫–∞.
    """
    start_time = time.time()
    sent = await message.answer("üèì –ò–∑–º–µ—Ä—è—é —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞...")
    
    latency = (time.time() - start_time) * 1000  # –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if latency < 50:
        connection_status = "–û—Ç–ª–∏—á–Ω–æ–µ"
        emoji = "üü¢"
    elif latency < 150:
        connection_status = "–•–æ—Ä–æ—à–µ–µ"
        emoji = "üü°"
    else:
        connection_status = "–ú–µ–¥–ª–µ–Ω–Ω–æ–µ"
        emoji = "üî¥"
    
    ping_text = (
        f"üèì Pong!\n\n"
        f"‚ö° –ó–∞–¥–µ—Ä–∂–∫–∞: {hcode(f'{latency:.2f} –º—Å')}\n"
        f"‚úÖ –°—Ç–∞—Ç—É—Å: {hcode('Online')}\n"
        f"{emoji} –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: {hcode(connection_status)}\n"
        f"üåê –°–µ—Ä–≤–µ—Ä: {hcode('Render.com')}"
    )
    
    await sent.edit_text(ping_text, parse_mode=ParseMode.HTML)
    logger.debug(f"User {message.from_user.id} pinged: {latency:.2f}ms")


@router.message(Command("status"))
async def handle_status(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status - —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º –±–æ—Ç–∞.
    """
    status_text = (
        f"{hbold('üîß –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º –±–æ—Ç–∞')}\n\n"
        f"{hbold('üü¢ –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:')}\n"
        "‚úÖ Bot API: Online\n"
        "‚úÖ Redis: Connected\n"
        "‚úÖ Database: Active\n"
        "‚úÖ Handlers: Loaded (21/21)\n"
        "‚úÖ Webhook: Active\n\n"
        f"{hbold('üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:')}\n"
        "‚ñ™Ô∏è Response Time: <100ms\n"
        "‚ñ™Ô∏è Memory Usage: Normal\n"
        "‚ñ™Ô∏è CPU Usage: Low\n"
        "‚ñ™Ô∏è Uptime: 99.9%\n\n"
        f"{hbold('üåê –í–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã:')}\n"
        "‚úÖ Crypto Price API: Online\n"
        "‚úÖ News Feed: Active\n"
        "‚úÖ Analytics: Running\n"
        "‚úÖ Payment Gateway: Ready\n\n"
        f"{hbold('üöÄ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:')}\n"
        f"Host: {hcode('Render.com')}\n"
        f"Region: {hcode('Auto')}\n"
        f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}"
    )
    
    await message.answer(status_text, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /status")


# ========== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´ ==========

@router.message(Command("settings"))
async def handle_settings(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="settings_notifications")],
        [InlineKeyboardButton(text="üåê –Ø–∑—ã–∫", callback_data="settings_language")],
        [InlineKeyboardButton(text="üé® –¢–µ–º–∞", callback_data="settings_theme")],
        [InlineKeyboardButton(text="üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", callback_data="settings_privacy")],
        [InlineKeyboardButton(text="üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="settings_export")],
        [InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="settings_close")]
    ])
    
    settings_text = (
        f"{hbold('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:\n\n"
        "üîî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏\n"
        "üåê –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n"
        "üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è\n"
        "üîí –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏\n"
        "üíæ –≠–∫—Å–ø–æ—Ä—Ç –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n\n"
        "üí° –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    )
    
    await message.answer(settings_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} opened settings")


@router.message(Command("feedback"))
async def handle_feedback(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /feedback - –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", callback_data="feedback_suggestion")],
        [InlineKeyboardButton(text="üêõ –°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ", callback_data="feedback_bug")],
        [InlineKeyboardButton(text="‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="feedback_review")],
        [InlineKeyboardButton(text="üí¨ –°–≤—è–∑–∞—Ç—å—Å—è", url="https://t.me/MiningBotSupport")]
    ])
    
    feedback_text = (
        f"{hbold('üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')}\n\n"
        "–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! üôè\n\n"
        f"{hbold('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è:')}\n\n"
        "üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n"
        "üêõ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ\n"
        "‚≠ê –û—Ç–∑—ã–≤ –æ –±–æ—Ç–µ\n"
        "üí¨ –ü—Ä—è–º–∞—è —Å–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n"
        f"{hbold('üìß –ö–æ–Ω—Ç–∞–∫—Ç—ã:')}\n"
        "Email: support@miningbot.com\n"
        "Telegram: @MiningBotSupport\n\n"
        "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: <24 —á–∞—Å–∞"
    )
    
    await message.answer(feedback_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} opened feedback")


@router.message(Command("roadmap"))
async def handle_roadmap(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /roadmap - –¥–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞.
    """
    roadmap_text = (
        f"{hbold('üó∫Ô∏è –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ Mining AI Bot')}\n\n"
        
        f"{hbold('‚úÖ Q4 2025 (–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è)')}\n"
        "‚úì 21 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n"
        "‚úì –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n"
        "‚úì –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞\n"
        "‚úì –°–æ–±—ã—Ç–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã\n"
        "‚úì –°–∏—Å—Ç–µ–º–∞ –¥–æ–Ω–∞—Ç–æ–≤\n"
        "‚úì 27 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π\n"
        "‚úì –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏\n\n"
        
        f"{hbold('üîÑ Q1 2026 (–í –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)')}\n"
        "‚öôÔ∏è –ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä —Ä–µ–∂–∏–º\n"
        "‚öôÔ∏è NFT –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ\n"
        "‚öôÔ∏è P2P —Ç–æ—Ä–≥–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞\n"
        "‚öôÔ∏è –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (iOS/Android)\n"
        "‚öôÔ∏è Web3 –∫–æ—à–µ–ª—ë–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è\n\n"
        
        f"{hbold('üìÖ Q2 2026 (–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)')}\n"
        "üìã DAO —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º\n"
        "üìã –°—Ç–µ–π–∫–∏–Ω–≥ –∏ —Ñ–∞—Ä–º–∏–Ω–≥ —Ç–æ–∫–µ–Ω–æ–≤\n"
        "üìã –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n"
        "üìã –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—è\n"
        "üìã –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã\n\n"
        
        f"{hbold('üöÄ Q3 2026 –∏ –¥–∞–ª–µ–µ')}\n"
        "üîÆ DeFi –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (Uniswap, PancakeSwap)\n"
        "üîÆ AI-–ø–æ–º–æ—â–Ω–∏–∫ —Å –º–∞—à–∏–Ω–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º\n"
        "üîÆ –ö—Ä–æ—Å—Å—á–µ–π–Ω –º–æ—Å—Ç—ã\n"
        "üîÆ –ú–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–∞—è Mining World\n"
        "üîÆ VR/AR –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n\n"
        
        "üì¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ /community!"
    )
    
    await message.answer(roadmap_text, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /roadmap")


@router.message(Command("faq"))
async def handle_faq(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /faq - —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞", callback_data="faq_game")],
        [InlineKeyboardButton(text="üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫", callback_data="faq_earning")],
        [InlineKeyboardButton(text="üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ", callback_data="faq_technical")],
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", callback_data="show_support")]
    ])
    
    faq_text = (
        f"{hbold('‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)')}\n\n"
        
        f"{hbold('üéÆ –ò–≥—Ä–∞ –∏ –º–∞–π–Ω–∏–Ω–≥')}\n\n"
        f"{hbold('Q: –ö–∞–∫ –Ω–∞—á–∞—Ç—å –º–∞–π–Ω–∏—Ç—å?')}\n"
        "A: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /game –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π ASIC. –ù–∞—á–Ω–∏—Ç–µ —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è!\n\n"
        
        f"{hbold('Q: –ß—Ç–æ —Ç–∞–∫–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è?')}\n"
        "A: –ù–∞–≥—Ä–∞–¥—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á. –î–∞—é—Ç –±–æ–Ω—É—Å—ã –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –°–º–æ—Ç—Ä–∏—Ç–µ /achievements\n\n"
        
        f"{hbold('üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')}\n\n"
        f"{hbold('Q: –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ?')}\n"
        "A: –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π —á–µ—Ä–µ–∑ /invite –∏ –ø–æ–ª—É—á–∞–π—Ç–µ 10% –æ—Ç –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤—Å–µ–≥–¥–∞!\n\n"
        
        f"{hbold('Q: –ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏?')}\n"
        "A: –ú–∏–Ω–∏–º—É–º –¥–ª—è –≤—ã–≤–æ–¥–∞ - 1000‚ÇΩ. –í—ã–ø–ª–∞—Ç—ã –Ω–∞ –∫–∞—Ä—Ç—É –∏–ª–∏ –∫—Ä–∏–ø—Ç–æ.\n\n"
        
        f"{hbold('üìä –†—ã–Ω–æ–∫ –∏ —Ü–µ–Ω—ã')}\n\n"
        f"{hbold('Q: –û—Ç–∫—É–¥–∞ –±–µ—Ä—É—Ç—Å—è —Ü–µ–Ω—ã?')}\n"
        "A: –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±–∏—Ä–∂ (Binance, CoinGecko) –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        
        f"{hbold('üèÜ –õ–∏–¥–µ—Ä–±–æ—Ä–¥')}\n\n"
        f"{hbold('Q: –ö–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø?')}\n"
        "A: –ú–∞–π–Ω–∏—Ç–µ –±–æ–ª—å—à–µ, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è, –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –ø—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π!\n\n"
        
        f"{hbold('üíé –ü—Ä–µ–º–∏—É–º')}\n\n"
        f"{hbold('Q: –ß—Ç–æ –¥–∞—ë—Ç –ø—Ä–µ–º–∏—É–º?')}\n"
        "A: x2 –∫ –∑–∞—Ä–∞–±–æ—Ç–∫—É, —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ ASIC, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞. /premium\n\n"
        
        f"{hbold('üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ')}\n\n"
        f"{hbold('Q: –ë–æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π?')}\n"
        "A: –î–∞! –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã. –ü—Ä–µ–º–∏—É–º - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ.\n\n"
        
        f"{hbold('Q: –ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?')}\n"
        "A: /support –∏–ª–∏ @MiningBotSupport (–æ—Ç–≤–µ—Ç <15 –º–∏–Ω)\n\n"
        
        "–ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç? –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ:"
    )
    
    await message.answer(faq_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /faq")


@router.message(Command("support"))
async def handle_support(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /support - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìñ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", url="https://help.miningbot.com")],
        [InlineKeyboardButton(text="üí¨ –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏", url="https://t.me/MiningBotSupport")],
        [InlineKeyboardButton(text="üìß Email", url="mailto:support@miningbot.com")],
        [InlineKeyboardButton(text="üÜò –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å", callback_data="support_urgent")],
        [InlineKeyboardButton(text="‚ùì FAQ", callback_data="show_faq")]
    ])
    
    support_text = (
        f"{hbold('üÜò –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞')}\n\n"
        f"{hbold('üìû –°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:')}\n\n"
        
        "üí¨ {hbold('–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)')}\n"
        "–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç –∫–æ–º–∞–Ω–¥—ã\n"
        "‚è± –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: <15 –º–∏–Ω—É—Ç\n"
        "üì± Telegram: @MiningBotSupport\n\n"
        
        "üìñ {hbold('–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π')}\n"
        "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Ä–µ—à–µ–Ω–∏–π\n"
        "üåê help.miningbot.com\n\n"
        
        "üìß {hbold('Email')}\n"
        "support@miningbot.com\n"
        "‚è± –û—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤\n\n"
        
        "üÜò {hbold('–°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å')}\n"
        "–î–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º\n"
        "‚è± –û—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç\n\n"
        
        f"{hbold('‚è∞ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:')}\n"
        "–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏: 24/7\n"
        "Email: –ü–Ω-–ü—Ç 9:00-21:00 (–ú–°–ö)\n"
        "–°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å: 24/7\n\n"
        
        f"{hbold('üåç –Ø–∑—ã–∫–∏:')}\n"
        "üá∑üá∫ –†—É—Å—Å–∫–∏–π | üá¨üáß English\n\n"
        
        "–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å! ü§ù"
    )
    
    await message.answer(support_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /support")


# ========== –°–û–¶–ò–ê–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´ ==========

@router.message(Command("leaderboard"))
async def handle_leaderboard(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /leaderboard - —Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìÖ –ù–µ–¥–µ–ª—è", callback_data="leaderboard_week"),
            InlineKeyboardButton(text="üìÖ –ú–µ—Å—è—Ü", callback_data="leaderboard_month")
        ],
        [
            InlineKeyboardButton(text="üèÜ –í—Å—ë –≤—Ä–µ–º—è", callback_data="leaderboard_all"),
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="leaderboard_refresh")
        ]
    ])
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    leaders = [
        ("CryptoKing", 1_250_000),
        ("MiningPro", 985_000),
        ("HashMaster", 750_000),
        ("BitMiner", 650_000),
        ("CoinDigger", 580_000),
        ("ASICLord", 520_000),
        ("BlockChain", 480_000),
        ("HashPower", 445_000),
        ("CryptoMiner", 410_000),
        ("BitFarmer", 385_000)
    ]
    
    medals = ["ü•á", "ü•à", "ü•â", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]
    
    leaderboard_lines = "\n".join([
        f"{medals[i]} {i+1}. {name} - {amount:,} ‚Çø".replace(",", " ")
        for i, (name, amount) in enumerate(leaders)
    ])
    
    leaderboard_text = (
        f"{hbold('üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤')}\n\n"
        f"{hbold('üëë –¢–æ–ø-10 –º–∞–π–Ω–µ—Ä–æ–≤ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è:')}\n\n"
        f"{leaderboard_lines}\n\n"
        f"{hbold('üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')}\n"
        "–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è: #523\n"
        "–î–æ —Ç–æ–ø-10: 385,000 ‚Çø\n\n"
        f"{hbold('üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:')}\n"
        "‚ñ™Ô∏è –ó–∞ –Ω–µ–¥–µ–ª—é - —Å–±—Ä–æ—Å –∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n"
        "‚ñ™Ô∏è –ó–∞ –º–µ—Å—è—Ü - —Å–±—Ä–æ—Å 1-–≥–æ —á–∏—Å–ª–∞\n"
        "‚ñ™Ô∏è –ó–∞ –≤—Å—ë –≤—Ä–µ–º—è - –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π /invite —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å—Å—è –≤—ã—à–µ!"
    )
    
    await message.answer(leaderboard_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} requested /leaderboard")


@router.message(Command("invite"))
async def handle_invite(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /invite - —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞.
    """
    user_id = message.from_user.id
    referral_link = f"https://t.me/MiningAIBot?start=ref{user_id}"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", 
                             url=f"https://t.me/share/url?url={referral_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Mining AI Bot!")],
        [InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="invite_stats")],
        [InlineKeyboardButton(text="üéÅ –ë–æ–Ω—É—Å—ã", callback_data="invite_bonuses")]
    ])
    
    invite_text = (
        f"{hbold('üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')}\n\n"
        f"{hbold('üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—è –¥—Ä—É–∑–µ–π!')}\n\n"
        
        f"{hbold('üéØ –í–∞—à–∏ –±–æ–Ω—É—Å—ã:')}\n"
        "‚ñ™Ô∏è 10% –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–∞–≤—Å–µ–≥–¥–∞\n"
        "‚ñ™Ô∏è 500‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥—Ä—É–≥–∞\n"
        "‚ñ™Ô∏è +50 –∫ —Ö–µ—à—Ä–µ–π—Ç—É –∑–∞ –∫–∞–∂–¥—ã–µ 10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n"
        "‚ñ™Ô∏è –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞ 100 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n\n"
        
        f"{hbold('üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')}\n"
        f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {hcode('0')} –¥—Ä—É–∑–µ–π\n"
        f"–ê–∫—Ç–∏–≤–Ω—ã—Ö: {hcode('0')} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        f"–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {hcode('0‚ÇΩ')}\n\n"
        
        f"{hbold('üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:')}\n"
        f"{hcode(referral_link)}\n\n"
        
        f"{hbold('üèÜ –ë–æ–Ω—É—Å—ã –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:')}\n"
        "ü•â 10 –¥—Ä—É–∑–µ–π ‚Üí +500‚ÇΩ\n"
        "ü•à 50 –¥—Ä—É–∑–µ–π ‚Üí –ü—Ä–µ–º–∏—É–º –Ω–∞ –º–µ—Å—è—Ü\n"
        "ü•á 100 –¥—Ä—É–∑–µ–π ‚Üí –ü—Ä–µ–º–∏—É–º –Ω–∞–≤—Å–µ–≥–¥–∞\n"
        "üëë 500 –¥—Ä—É–∑–µ–π ‚Üí –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π ASIC\n\n"
        
        "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å! üí∏"
    )
    
    await message.answer(invite_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {user_id} opened invite program")


@router.message(Command("community"))
async def handle_community(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /community - —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–∞.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí¨ Telegram —á–∞—Ç", url="https://t.me/MiningBotChat")],
        [InlineKeyboardButton(text="üì¢ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª", url="https://t.me/MiningBotNews")],
        [InlineKeyboardButton(text="üê¶ Twitter", url="https://twitter.com/MiningBot")],
        [InlineKeyboardButton(text="üíº LinkedIn", url="https://linkedin.com/company/miningbot")],
        [InlineKeyboardButton(text="üì∫ YouTube", url="https://youtube.com/@MiningBot")],
        [InlineKeyboardButton(text="üíé Discord", url="https://discord.gg/miningbot")]
    ])
    
    community_text = (
        f"{hbold('üë• –°–æ–æ–±—â–µ—Å—Ç–≤–æ Mining AI Bot')}\n\n"
        f"{hbold('üåç –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º!')}\n\n"
        
        "üí¨ {hbold('Telegram —á–∞—Ç')}\n"
        "–û–±—â–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–π–Ω–µ—Ä–∞–º–∏\n"
        "üë• 50,000+ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n"
        
        "üì¢ {hbold('–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª')}\n"
        "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∞–Ω–æ–Ω—Å—ã\n"
        "üìä 100,000+ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n\n"
        
        "üê¶ {hbold('Twitter')}\n"
        "–ù–æ–≤–æ—Å—Ç–∏ –∏ –∫—Ä–∏–ø—Ç–æ-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n"
        "üî• –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã\n\n"
        
        "üíº {hbold('LinkedIn')}\n"
        "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–µ—Ç—å\n"
        "üí° –í–∞–∫–∞–Ω—Å–∏–∏ –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞\n\n"
        
        "üì∫ {hbold('YouTube')}\n"
        "–û–±—É—á–∞—é—â–∏–µ –≤–∏–¥–µ–æ –∏ —Å—Ç—Ä–∏–º—ã\n"
        "üéì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ã\n\n"
        
        "üíé {hbold('Discord')}\n"
        "–ì–æ–ª–æ—Å–æ–≤—ã–µ —á–∞—Ç—ã –∏ –∏–≤–µ–Ω—Ç—ã\n"
        "üéÆ –¢—É—Ä–Ω–∏—Ä—ã –∏ –∫–æ–Ω–∫—É—Ä—Å—ã\n\n"
        
        f"{hbold('üìä –ù–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')}\n"
        "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 250,000+\n"
        "üåç –°—Ç—Ä–∞–Ω: 87\n"
        "‚≠ê –†–µ–π—Ç–∏–Ω–≥: 4.9/5.0\n\n"
        
        "–°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞! üöÄ"
    )
    
    await message.answer(community_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} opened community")


@router.message(Command("events"))
async def handle_events(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /events - —Å–æ–±—ã—Ç–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÆ –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è", callback_data="events_active")],
        [InlineKeyboardButton(text="üèÜ –¢—É—Ä–Ω–∏—Ä—ã", callback_data="events_tournaments")],
        [InlineKeyboardButton(text="üéÅ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥", callback_data="events_prizes")],
        [InlineKeyboardButton(text="üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å", callback_data="events_calendar")]
    ])
    
    # –ü—Ä–∏–º–µ—Ä—ã —Ç–µ–∫—É—â–∏—Ö —Å–æ–±—ã—Ç–∏–π
    events_text = (
        f"{hbold('üéÆ –°–æ–±—ã—Ç–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã')}\n\n"
        
        f"{hbold('üî• –ê–ö–¢–ò–í–ù–´–ï –°–û–ë–´–¢–ò–Ø:')}\n\n"
        
        "üèÜ {hbold('–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä')}\n"
        "–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: 100,000‚ÇΩ\n"
        "–û—Å—Ç–∞–ª–æ—Å—å: 3 –¥–Ω—è 12 —á–∞—Å–æ–≤\n"
        "–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: 5,432\n\n"
        
        "üéÅ {hbold('–ú–∞–π–Ω–∏–Ω–≥-–º–∞—Ä–∞—Ñ–æ–Ω')}\n"
        "–ó–∞–¥–∞—á–∞: –ù–∞–º–∞–π–Ω–∏—Ç—å 1,000,000 ‚Çø\n"
        "–ù–∞–≥—Ä–∞–¥–∞: –ü—Ä–µ–º–∏—É–º –Ω–∞ –≥–æ–¥\n"
        "–ü—Ä–æ–≥—Ä–µ—Å—Å: 45% (–¥–æ 29.11.2025)\n\n"
        
        "‚ö° {hbold('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂')}\n"
        "–ü—Ä–∏–≤–µ–¥–∏ 50 –¥—Ä—É–∑–µ–π –∑–∞ –º–µ—Å—è—Ü\n"
        "–ù–∞–≥—Ä–∞–¥–∞: 10,000‚ÇΩ + –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π ASIC\n"
        "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å: 0/50\n\n"
        
        f"{hbold('üìÖ –°–ö–û–†–û:')}\n\n"
        "üéÑ –ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –∏–≤–µ–Ω—Ç (01.12.2025)\n"
        "–ü—Ä–∏–∑—ã –Ω–∞ 500,000‚ÇΩ + NFT –ø–æ–¥–∞—Ä–∫–∏\n\n"
        
        "üöÄ –ë–∏—Ç–≤–∞ –∫–ª–∞–Ω–æ–≤ (15.12.2025)\n"
        "–ö–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ\n\n"
        
        f"{hbold('üí∞ –ü–†–ò–ó–û–í–û–ô –§–û–ù–î:')}\n"
        f"–ù–æ—è–±—Ä—å 2025: {hcode('250,000‚ÇΩ')}\n"
        f"–î–µ–∫–∞–±—Ä—å 2025: {hcode('500,000‚ÇΩ')}\n\n"
        
        f"{hbold('üèÖ –ö–ê–ö –£–ß–ê–°–¢–í–û–í–ê–¢–¨:')}\n"
        "1. –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n"
        "2. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö\n"
        "3. –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π\n"
        "4. –ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n\n"
        
        "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ /community! üì¢"
    )
    
    await message.answer(events_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} opened events")


# ========== –ü–†–ï–ú–ò–£–ú –ò –ú–û–ù–ï–¢–ò–ó–ê–¶–ò–Ø ==========

@router.message(Command("premium"))
async def handle_premium(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /premium - –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíé –ö—É–ø–∏—Ç—å Premium", callback_data="premium_buy")],
        [
            InlineKeyboardButton(text="üìÖ 1 –º–µ—Å—è—Ü", callback_data="premium_1m"),
            InlineKeyboardButton(text="üìÖ 3 –º–µ—Å—è—Ü–∞", callback_data="premium_3m")
        ],
        [
            InlineKeyboardButton(text="üìÖ 6 –º–µ—Å—è—Ü–µ–≤", callback_data="premium_6m"),
            InlineKeyboardButton(text="üìÖ 1 –≥–æ–¥", callback_data="premium_1y")
        ],
        [InlineKeyboardButton(text="üéÅ –ü–æ–¥–∞—Ä–∏—Ç—å –¥—Ä—É–≥—É", callback_data="premium_gift")]
    ])
    
    premium_text = (
        f"{hbold('üíé Mining AI Bot Premium')}\n\n"
        f"{hbold('üöÄ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ü–†–ï–ú–ò–£–ú:')}\n\n"
        
        "‚ö° {hbold('–£—Å–∫–æ—Ä–µ–Ω–Ω—ã–π –º–∞–π–Ω–∏–Ω–≥')}\n"
        "‚ñ™Ô∏è x2 —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ–±—ã—á–∏\n"
        "‚ñ™Ô∏è x1.5 –∫ —Ö–µ—à—Ä–µ–π—Ç—É\n"
        "‚ñ™Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞–π–Ω–∏–Ω–≥ 24/7\n\n"
        
        "üéÆ {hbold('–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏')}\n"
        "‚ñ™Ô∏è 10 –ø—Ä–µ–º–∏—É–º ASIC-–æ–≤\n"
        "‚ñ™Ô∏è –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n"
        "‚ñ™Ô∏è –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤–∏–Ω–∫–∞–º\n"
        "‚ñ™Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∑–Ω–∞—á–æ–∫ üíé\n\n"
        
        "üí∞ {hbold('–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –±–æ–Ω—É—Å—ã')}\n"
        "‚ñ™Ô∏è +20% –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º\n"
        "‚ñ™Ô∏è –°–Ω–∏–∂–µ–Ω–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è –≤—ã–≤–æ–¥–∞\n"
        "‚ñ™Ô∏è –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã\n"
        "‚ñ™Ô∏è –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö\n\n"
        
        "üÜò {hbold('VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞')}\n"
        "‚ñ™Ô∏è –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å\n"
        "‚ñ™Ô∏è –õ–∏—á–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä\n"
        "‚ñ™Ô∏è –ü–æ–º–æ—â—å 24/7\n\n"
        
        f"{hbold('üíµ –¶–ï–ù–´:')}\n"
        "üìÖ 1 –º–µ—Å—è—Ü ‚Üí 299‚ÇΩ (10‚ÇΩ/–¥–µ–Ω—å)\n"
        "üìÖ 3 –º–µ—Å—è—Ü–∞ ‚Üí 699‚ÇΩ (8‚ÇΩ/–¥–µ–Ω—å) -20%\n"
        "üìÖ 6 –º–µ—Å—è—Ü–µ–≤ ‚Üí 1,199‚ÇΩ (7‚ÇΩ/–¥–µ–Ω—å) -30%\n"
        "üìÖ 1 –≥–æ–¥ ‚Üí 1,999‚ÇΩ (5‚ÇΩ/–¥–µ–Ω—å) -45%\n\n"
        
        f"{hbold('üéÅ –°–ü–ï–¶–ò–ê–õ–¨–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï:')}\n"
        "–ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è –ë–ï–°–ü–õ–ê–¢–ù–û!\n"
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–µ–∑ —Ä–∏—Å–∫–∞ üéâ\n\n"
        
        f"{hbold('üí≥ –°–ü–û–°–û–ë–´ –û–ü–õ–ê–¢–´:')}\n"
        "‚ñ™Ô∏è –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ (–†–§)\n"
        "‚ñ™Ô∏è –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ (BTC, ETH, USDT)\n"
        "‚ñ™Ô∏è –ÆMoney, Qiwi\n"
        "‚ñ™Ô∏è Telegram Stars\n\n"
        
        "–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ Premium –∏ —É–≤–µ–ª–∏—á—å—Ç–µ –¥–æ—Ö–æ–¥! üíé"
    )
    
    await message.answer(premium_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} opened premium")


@router.message(Command("donate"))
async def handle_donate(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /donate - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –ö–∞—Ä—Ç–∞ (–†–§)", callback_data="donate_card")],
        [InlineKeyboardButton(text="‚Çø Bitcoin", callback_data="donate_btc")],
        [InlineKeyboardButton(text="Œû Ethereum", callback_data="donate_eth")],
        [InlineKeyboardButton(text="üíé USDT (TRC20)", callback_data="donate_usdt")],
        [InlineKeyboardButton(text="‚≠ê Telegram Stars", callback_data="donate_stars")],
        [InlineKeyboardButton(text="üèÜ –¢–∞–±–ª–∏—Ü–∞ –¥–æ–Ω–æ—Ä–æ–≤", callback_data="donate_leaderboard")]
    ])
    
    donate_text = (
        f"{hbold('‚ù§Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ Mining AI Bot')}\n\n"
        
        "üôè {hbold('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!')}\n\n"
        "–í–∞—à–∏ –¥–æ–Ω–∞—Ç—ã –ø–æ–º–æ–≥–∞—é—Ç –Ω–∞–º:\n"
        "‚ñ™Ô∏è –†–∞–∑–≤–∏–≤–∞—Ç—å –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n"
        "‚ñ™Ô∏è –£–ª—É—á—à–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n"
        "‚ñ™Ô∏è –ü—Ä–æ–≤–æ–¥–∏—Ç—å –∫–æ–Ω–∫—É—Ä—Å—ã\n"
        "‚ñ™Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–µ—Ä–≤–µ—Ä—ã\n"
        "‚ñ™Ô∏è –°–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç\n\n"
        
        f"{hbold('üéÅ –ë–û–ù–£–°–´ –î–õ–Ø –î–û–ù–û–†–û–í:')}\n\n"
        
        "üíö 100‚ÇΩ+ ‚Üí –ó–Ω–∞—á–æ–∫ –¥–æ–Ω–æ—Ä–∞ üéñÔ∏è\n"
        "üíô 500‚ÇΩ+ ‚Üí +1000 —Ö–µ—à—Ä–µ–π—Ç–∞\n"
        "üíú 1,000‚ÇΩ+ ‚Üí Premium –Ω–∞ –º–µ—Å—è—Ü\n"
        "‚ù§Ô∏è 5,000‚ÇΩ+ ‚Üí Premium –Ω–∞ –≥–æ–¥ + —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π ASIC\n"
        "üß° 10,000‚ÇΩ+ ‚Üí –í–∞—à–µ –∏–º—è –≤ –∑–∞–ª–µ —Å–ª–∞–≤—ã\n\n"
        
        f"{hbold('üí≥ –°–ü–û–°–û–ë–´ –î–û–ù–ê–¢–ê:')}\n\n"
        
        "üí≥ {hbold('–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ (–†–§)')}\n"
        f"–°–±–µ—Ä–±–∞–Ω–∫: {hcode('2202 2006 1234 5678')}\n\n"
        
        "‚Çø {hbold('Bitcoin')}\n"
        f"{hcode('bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh')}\n\n"
        
        "Œû {hbold('Ethereum')}\n"
        f"{hcode('0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb')}\n\n"
        
        "üíé {hbold('USDT (TRC20)')}\n"
        f"{hcode('TYx7x1x1x1x1x1x1x1x1x1x1x1x1x1x')}\n\n"
        
        f"{hbold('üèÜ –¢–û–ü-3 –î–û–ù–û–†–ê:')}\n"
        "ü•á CryptoKing - 50,000‚ÇΩ\n"
        "ü•à BitLord - 35,000‚ÇΩ\n"
        "ü•â HashMaster - 25,000‚ÇΩ\n\n"
        
        f"{hbold('üìä –°–æ–±—Ä–∞–Ω–æ –∑–∞ –º–µ—Å—è—Ü:')}\n"
        f"–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü: {hcode('125,430‚ÇΩ')} –∏–∑ {hcode('200,000‚ÇΩ')}\n"
        "–ü—Ä–æ–≥—Ä–µ—Å—Å: ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë 62%\n\n"
        
        "–ö–∞–∂–¥—ã–π —Ä—É–±–ª—å –Ω–∞ —Å—á–µ—Ç—É! –°–ø–∞—Å–∏–±–æ! üôè‚ù§Ô∏è"
    )
    
    await message.answer(donate_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} opened donate")


# ========== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–¢–ò–õ–ò–¢–´ ==========

@router.message(Command("calculator"))
async def handle_calculator(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /calculator - –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ö° –•–µ—à—Ä–µ–π—Ç ‚Üí –î–æ—Ö–æ–¥", callback_data="calc_hashrate")],
        [InlineKeyboardButton(text="üí∞ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ ‚Üí ROI", callback_data="calc_roi")],
        [InlineKeyboardButton(text="üìä –°—Ä–∞–≤–Ω–∏—Ç—å ASIC", callback_data="calc_compare")],
        [InlineKeyboardButton(text="üîå –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", callback_data="calc_power")]
    ])
    
    calc_text = (
        f"{hbold('üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏')}\n\n"
        
        f"{hbold('üìä –ë–´–°–¢–†–´–ô –†–ê–°–ß–Å–¢:')}\n\n"
        
        "‚ö° {hbold('–•–µ—à—Ä–µ–π—Ç ‚Üí –î–æ—Ö–æ–¥')}\n"
        "–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –¥–æ—Ö–æ–¥ –ø–æ –≤–∞—à–µ–º—É —Ö–µ—à—Ä–µ–π—Ç—É\n\n"
        
        "üí∞ {hbold('–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ ‚Üí ROI')}\n"
        "–£–∑–Ω–∞–π—Ç–µ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏–π\n\n"
        
        "üìä {hbold('–°—Ä–∞–≤–Ω–∏—Ç—å ASIC')}\n"
        "–°—Ä–∞–≤–Ω–∏—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–∞–π–Ω–µ—Ä–æ–≤\n\n"
        
        "üîå {hbold('–°—Ç–æ–∏–º–æ—Å—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞')}\n"
        "–ü–æ–¥—Å—á–∏—Ç–∞–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —ç–Ω–µ—Ä–≥–∏—é\n\n"
        
        f"{hbold('üí° –ü–†–ò–ú–ï–† –†–ê–°–ß–Å–¢–ê:')}\n\n"
        f"–•–µ—à—Ä–µ–π—Ç: {hcode('100 TH/s')}\n"
        f"–ú–æ—â–Ω–æ—Å—Ç—å: {hcode('3,250 W')}\n"
        f"–¢–∞—Ä–∏—Ñ: {hcode('5‚ÇΩ/–∫–í—Ç‚ãÖ—á')}\n\n"
        
        f"{hbold('–†–µ–∑—É–ª—å—Ç–∞—Ç:')}\n"
        f"–î–æ—Ö–æ–¥/–¥–µ–Ω—å: {hcode('~1,200‚ÇΩ')}\n"
        f"–†–∞—Å—Ö–æ–¥/–¥–µ–Ω—å: {hcode('~390‚ÇΩ')}\n"
        f"–ü—Ä–∏–±—ã–ª—å/–¥–µ–Ω—å: {hcode('~810‚ÇΩ')}\n"
        f"–ü—Ä–∏–±—ã–ª—å/–º–µ—Å—è—Ü: {hcode('~24,300‚ÇΩ')}\n\n"
        
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—á—ë—Ç–∞:"
    )
    
    await message.answer(calc_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {message.from_user.id} opened calculator")


@router.message(Command("profile"))
async def handle_profile(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile - –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user = message.from_user
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    level = random.randint(5, 25)
    balance = random.randint(10000, 500000)
    hashrate = random.randint(50, 500)
    referrals = random.randint(0, 50)
    achievements_count = random.randint(3, 15)
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="profile_stats")],
        [InlineKeyboardButton(text="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="profile_achievements")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="profile_settings")],
        [InlineKeyboardButton(text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è", callback_data="profile_share")]
    ])
    
    profile_text = (
        f"{hbold('üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')}\n\n"
        
        f"{hbold('üÜî –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:')}\n"
        f"–ò–º—è: {user.full_name}\n"
        f"Username: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"ID: {hcode(str(user.id))}\n"
        f"–£—Ä–æ–≤–µ–Ω—å: {hcode(f'‚≠ê {level}')}\n\n"
        
        f"{hbold('üí∞ –§–∏–Ω–∞–Ω—Å—ã:')}\n"
        f"–ë–∞–ª–∞–Ω—Å: {hcode(f'{balance:,}‚ÇΩ'.replace(',', ' '))}\n"
        f"–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å–µ–≥–æ: {hcode(f'{balance * 2:,}‚ÇΩ'.replace(',', ' '))}\n"
        f"–í—ã–≤–µ–¥–µ–Ω–æ: {hcode(f'{balance // 2:,}‚ÇΩ'.replace(',', ' '))}\n\n"
        
        f"{hbold('‚ö° –ú–∞–π–Ω–∏–Ω–≥:')}\n"
        f"–•–µ—à—Ä–µ–π—Ç: {hcode(f'{hashrate} TH/s')}\n"
        f"ASIC-–æ–≤: {hcode('5')}\n"
        f"–ù–∞–º–∞–π–Ω–µ–Ω–æ: {hcode(f'{balance * 10:,} ‚Çø'.replace(',', ' '))}\n\n"
        
        f"{hbold('üë• –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ:')}\n"
        f"–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {hcode(str(referrals))}\n"
        f"–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {hcode(f'{achievements_count}/27')}\n"
        f"–†–µ–π—Ç–∏–Ω–≥: {hcode(f'#{random.randint(100, 10000)}')}\n\n"
        
        f"{hbold('üìÖ –°—Ç–∞—Ç—É—Å:')}\n"
        f"–ü–æ–¥–ø–∏—Å–∫–∞: {'üíé Premium' if random.random() > 0.7 else 'üÜì Free'}\n"
        f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {datetime.now().strftime('%d.%m.%Y')}\n"
        f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: –°–µ–≥–æ–¥–Ω—è\n\n"
        
        "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å! üí™"
    )
    
    await message.answer(profile_text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    logger.info(f"User {user.id} viewed profile")


# ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò CALLBACK ==========

@router.callback_query(F.data.startswith("settings_"))
async def handle_settings_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ –∏–∑ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    await callback.answer("–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! üîß")


@router.callback_query(F.data.startswith("feedback_"))
async def handle_feedback_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ –∏–∑ –º–µ–Ω—é –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
    await callback.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏")


@router.callback_query(F.data.startswith("invite_"))
async def handle_invite_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    await callback.answer("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞! üìä")


@router.callback_query(F.data.startswith("premium_"))
async def handle_premium_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏"""
    await callback.answer("–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ... üí≥")


@router.callback_query(F.data.startswith("donate_"))
async def handle_donate_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ –¥–æ–Ω–∞—Ç–æ–≤"""
    await callback.answer("–†–µ–∫–≤–∏–∑–∏—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã! üìã")


@router.callback_query(F.data.startswith("events_"))
async def handle_events_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ —Å–æ–±—ã—Ç–∏–π"""
    await callback.answer("–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π... üéÆ")


@router.callback_query(F.data.startswith("calc_"))
async def handle_calc_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞"""
    await callback.answer("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞")


@router.callback_query(F.data.startswith("profile_"))
async def handle_profile_callbacks(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è"""
    await callback.answer("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã! ‚úÖ")


@router.callback_query(F.data == "show_faq")
async def handle_show_faq(callback):
    """–ü–æ–∫–∞–∑–∞—Ç—å FAQ"""
    await callback.message.delete()
    await handle_faq(callback.message)
    await callback.answer()


@router.callback_query(F.data == "show_support")
async def handle_show_support(callback):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É"""
    await callback.message.delete()
    await handle_support(callback.message)
    await callback.answer()


# ========== –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ó–ê–ì–†–£–ó–ö–ò ==========

logger.success(
    f"‚úÖ Command Handler Extended FULL loaded successfully! "
    f"21 additional commands registered."
)