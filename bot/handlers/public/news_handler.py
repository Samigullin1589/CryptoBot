# ===============================================================
# –§–∞–π–ª: bot/handlers/public/news_handler.py (–ù–û–í–´–ô –§–ê–ô–õ)
# –û–ø–∏—Å–∞–Ω–∏–µ: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π.
# ===============================================================
import logging
from typing import Union

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery

from bot.keyboards.keyboards import get_main_menu_keyboard
from bot.services.news_service import NewsService
from bot.services.admin_service import AdminService
from bot.utils.helpers import get_message_and_chat_id

router = Router()
logger = logging.getLogger(__name__)

@router.callback_query(F.data == "menu_news")
@router.message(F.text == "üì∞ –ù–æ–≤–æ—Å—Ç–∏")
async def handle_news_menu(update: Union[CallbackQuery, Message], news_service: NewsService, admin_service: AdminService):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.
    """
    await admin_service.track_command_usage("üì∞ –ù–æ–≤–æ—Å—Ç–∏")
    message, _ = await get_message_and_chat_id(update)
    
    temp_message = await message.answer("‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –Ω–æ–≤–æ—Å—Ç–∏...")

    news = await news_service.fetch_latest_news()
    if not news:
        await temp_message.edit_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.", reply_markup=get_main_menu_keyboard())
        return
        
    text = "üì∞ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–Ω–æ–≤–æ—Å—Ç–∏:</b>\n\n" + "\n\n".join(
        [f"üîπ <a href=\"{n['link']}\">{n['title']}</a>" for n in news])
        
    await temp_message.edit_text(text, disable_web_page_preview=True, reply_markup=get_main_menu_keyboard())
    
    if isinstance(update, CallbackQuery):
        await update.answer()
