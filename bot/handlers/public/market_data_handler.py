# ===============================================================
# –§–∞–π–ª: bot/handlers/public/market_data_handler.py (–ü–†–û–î–ê–ö–®–ù-–í–ï–†–°–ò–Ø 2025)
# –û–ø–∏—Å–∞–Ω–∏–µ: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö,
# —Ç–∞–∫–∏—Ö –∫–∞–∫ –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏, —Å—Ç–∞—Ç—É—Å —Å–µ—Ç–∏ Bitcoin –∏
# –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö–∞–ª–≤–∏–Ω–≥–µ.
# ===============================================================
import logging
import asyncio
from typing import Union

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, BufferedInputFile

from bot.keyboards.info_keyboards import get_main_menu_keyboard
from bot.services.market_data_service import MarketDataService
from bot.utils.plotting import generate_fng_image
from bot.utils.formatters import format_halving_info, format_network_status
# --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –º–æ–¥—É–ª—è ---
from bot.utils.ui_helpers import show_main_menu_from_callback
# --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
router = Router(name=__name__)
logger = logging.getLogger(__name__)

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –†–ê–ó–ù–´–• –¢–ò–ü–û–í –†–´–ù–û–ß–ù–´–• –î–ê–ù–ù–´–• ---

@router.callback_query(F.data == "nav:fear_greed")
async def handle_fear_greed_menu(call: CallbackQuery, market_data_service: MarketDataService):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ò–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏.
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
    """
    await call.message.delete()
    temp_message = await call.message.answer("‚è≥ –ü–æ–ª—É—á–∞—é –∏–Ω–¥–µ–∫—Å –∏ —Ä–∏—Å—É—é –≥—Ä–∞—Ñ–∏–∫...")

    index = await market_data_service.get_fear_and_greed_index()
    if not index:
        await temp_message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏.", reply_markup=get_main_menu_keyboard())
        return

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞
    loop = asyncio.get_running_loop()
    image_bytes = await loop.run_in_executor(
        None, generate_fng_image, index.value, index.value_classification
    )
    
    caption = f"üò± <b>–ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏: {index.value} - {index.value_classification}</b>"

    await temp_message.delete()
    await call.message.answer_photo(
        BufferedInputFile(image_bytes, "fng.png"), 
        caption=caption, 
        reply_markup=get_main_menu_keyboard()
    )

@router.callback_query(F.data.startswith("nav:"))
async def handle_market_data_navigation(call: CallbackQuery, market_data_service: MarketDataService):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–•–∞–ª–≤–∏–Ω–≥" –∏ "–°—Ç–∞—Ç—É—Å BTC".
    """
    action = call.data.split(':')[1]
    
    text = "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ..."
    await call.message.edit_text(text)
    
    response_text = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö."

    if action == "halving":
        halving_info = await market_data_service.get_halving_info()
        if halving_info:
            response_text = format_halving_info(halving_info)
    
    elif action == "btc_status":
        network_status = await market_data_service.get_btc_network_status()
        if network_status:
            response_text = format_network_status(network_status)

    await call.message.edit_text(response_text, reply_markup=get_main_menu_keyboard())
