# ===============================================================
# –§–∞–π–ª: bot/handlers/admin/admin_menu.py (–ü–†–û–î–ê–ö–®–ù-–í–ï–†–°–ò–Ø 2025 - –ü–û–õ–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø)
# –û–ø–∏—Å–∞–Ω–∏–µ: –£–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø–æ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ deps: Deps.
# ===============================================================
import logging
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from bot.filters.access_filters import PrivilegeFilter, UserRole
from bot.states.admin_states import AdminStates
from bot.texts.admin_texts import SUPER_ADMIN_ONLY_TEXT
from bot.keyboards.admin_keyboards import get_stats_menu_keyboard, get_back_to_admin_menu_keyboard, get_system_actions_keyboard
from bot.keyboards.callback_factories import AdminCallback
from bot.utils.dependencies import Deps

admin_router = Router(name=__name__)
# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∫–æ –≤—Å–µ–º —Ö—ç–Ω–¥–ª–µ—Ä–∞–º –≤ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ
admin_router.message.filter(PrivilegeFilter(min_role=UserRole.ADMIN))
admin_router.callback_query.filter(PrivilegeFilter(min_role=UserRole.ADMIN))

logger = logging.getLogger(__name__)

# --- –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å ---

@admin_router.message(Command("admin"))
async def admin_start_handler(message: Message, state: FSMContext, deps: Deps):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    await state.set_state(AdminStates.main)
    
    menu_text, menu_keyboard = await deps.admin_service.get_main_menu_content(message.from_user.id)
    await message.answer(menu_text, reply_markup=menu_keyboard)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---

@admin_router.callback_query(AdminCallback.filter(F.action == "menu"))
async def admin_menu_callback(call: CallbackQuery, state: FSMContext, deps: Deps):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏."""
    await state.set_state(AdminStates.main)
    await call.answer()
    
    menu_text, menu_keyboard = await deps.admin_service.get_main_menu_content(call.from_user.id)
    
    try:
        await call.message.edit_text(menu_text, reply_markup=menu_keyboard)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è admin_menu: {e}")
        await call.message.delete()
        await call.message.answer(menu_text, reply_markup=menu_keyboard)

# --- –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –ú–ï–ù–Æ –°–¢–ê–¢–ò–°–¢–ò–ö–ò ---
@admin_router.callback_query(AdminCallback.filter(F.action == "stats_menu"), AdminStates.main)
async def admin_stats_menu_handler(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
    """
    await call.answer()
    await state.set_state(AdminStates.stats_view)
    text = "<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–æ—Ç–∞</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"
    await call.message.edit_text(text, reply_markup=get_stats_menu_keyboard())

# --- –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π (–¥–ª—è SUPER_ADMIN) ---
@admin_router.callback_query(AdminCallback.filter(F.action == "system_menu"), AdminStates.main)
async def admin_system_menu_handler(call: CallbackQuery, state: FSMContext):
    await call.answer()
    await state.set_state(AdminStates.main) # –û—Å—Ç–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä—É–≥–æ–µ –º–µ–Ω—é
    text = "<b>‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    await call.message.edit_text(text, reply_markup=get_system_actions_keyboard())


@admin_router.callback_query(AdminCallback.filter(F.action == "system:clear_asic_cache"), PrivilegeFilter(min_role=UserRole.SUPER_ADMIN))
async def clear_asic_cache_callback(call: CallbackQuery, deps: Deps):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à ASIC'."""
    await call.answer("‚è≥ –û—á–∏—â–∞—é –∫—ç—à...", show_alert=False)
    
    try:
        deleted_count = await deps.admin_service.clear_asic_cache()
        
        if deleted_count > 0:
            response_text = (f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ <b>{deleted_count}</b> –∫–ª—é—á–µ–π –∏–∑ –∫—ç—à–∞ ASIC.\n\n"
                             "–î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ.")
        else:
            response_text = "‚ÑπÔ∏è –ö—ç—à ASIC —É–∂–µ –±—ã–ª –ø—É—Å—Ç. –£–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ {call.from_user.id}: {e}", exc_info=True)
        response_text = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}"
    
    await call.message.edit_text(response_text, reply_markup=get_back_to_admin_menu_keyboard())


@admin_router.message(Command("super"), PrivilegeFilter(min_role=UserRole.SUPER_ADMIN))
async def super_admin_only_handler(message: Message):
    """–ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞, –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –¢–û–õ–¨–ö–û –¥–ª—è –°–£–ü–ï–†-–ê–î–ú–ò–ù–ê."""
    await message.answer(SUPER_ADMIN_ONLY_TEXT)