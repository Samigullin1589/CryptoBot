import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery
from bot.filters.admin_filter import IsAdmin
from bot.keyboards.admin_keyboards import get_back_to_admin_menu_keyboard
from bot.services.admin_service import AdminStatsService

stats_router = Router()
logger = logging.getLogger(__name__)

# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∞–¥–º–∏–Ω–∞ –∫–æ –≤—Å–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ
stats_router.callback_query.filter(IsAdmin())

@stats_router.callback_query(F.data == "admin_stats_general")
async def show_general_stats(call: CallbackQuery, admin_service: AdminStatsService):
    stats = await admin_service.get_general_stats()
    text = (
        "<b>üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: <b>{stats['total_users']}</b>\n"
        f"üèÉ‚Äç‚ôÇÔ∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: <b>{stats['active_24h']}</b>"
    )
    await call.message.edit_text(text, reply_markup=get_back_to_admin_menu_keyboard())


@stats_router.callback_query(F.data == "admin_stats_mining")
async def show_mining_stats(call: CallbackQuery, admin_service: AdminStatsService):
    stats = await admin_service.get_mining_stats()
    text = (
        "<b>üíé –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ '–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ú–∞–π–Ω–∏–Ω–≥–∞'</b>\n\n"
        f"‚ö°Ô∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π —Å–µ–π—á–∞—Å: <b>{stats['active_sessions']}</b>\n"
        f"üí∞ –í—Å–µ–≥–æ –º–æ–Ω–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å–∞—Ö: <b>{stats['total_balance']:.2f}</b>\n"
        f"üì§ –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤: <b>{stats['total_withdrawn']:.2f}</b>\n"
        f"ü§ù –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>{stats['total_referrals']}</b>"
    )
    await call.message.edit_text(text, reply_markup=get_back_to_admin_menu_keyboard())


@stats_router.callback_query(F.data == "admin_stats_commands")
async def show_command_stats(call: CallbackQuery, admin_service: AdminStatsService):
    top_commands = await admin_service.get_command_stats()
    
    if not top_commands:
        stats_text = "–ï—â–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö."
    else:
        stats_text = "\n".join([f"üîπ <code>{cmd}</code> - {score} —Ä–∞–∑" for cmd, score in top_commands])

    text = (
        "<b>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥</b>\n\n"
        f"{stats_text}"
    )
    await call.message.edit_text(text, reply_markup=get_back_to_admin_menu_keyboard())