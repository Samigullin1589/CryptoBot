# bot/handlers/game/game_handler.py
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from loguru import logger

from bot.keyboards.callback_factories import GameCallback
from bot.utils.dependencies import Deps

router = Router(name="game_handler")


@router.message(Command("game"))
async def cmd_game(message: Message, deps: Deps) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /game - –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã"""
    try:
        text = (
            "üéÆ <b>–ú–∞–π–Ω–∏–Ω–≥-—Å–∏–º—É–ª—è—Ç–æ—Ä</b>\n\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É!\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚õèÔ∏è –ú–∞–π–Ω–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É\n"
            "üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã\n"
            "üèÜ –ü–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π."
        )
        
        await message.answer(text, parse_mode="HTML")
        logger.info(f"User {message.from_user.id} started game via /game")
        
    except Exception as e:
        logger.error(f"Error in cmd_game: {e}", exc_info=True)
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã.")


@router.callback_query(GameCallback.filter(F.action == "main_menu"))
async def game_main_menu(call: CallbackQuery, deps: Deps) -> None:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã –∏–∑ –∫–Ω–æ–ø–∫–∏"""
    try:
        await call.answer()
        
        text = (
            "üéÆ <b>–ú–∞–π–Ω–∏–Ω–≥-—Å–∏–º—É–ª—è—Ç–æ—Ä</b>\n\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É!\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚õèÔ∏è –ú–∞–π–Ω–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É\n"
            "üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã\n"
            "üèÜ –ü–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π."
        )
        
        await call.message.edit_text(text, parse_mode="HTML")
        logger.info(f"User {call.from_user.id} opened game main menu")
        
    except Exception as e:
        logger.error(f"Error in game_main_menu: {e}", exc_info=True)
        try:
            await call.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)
        except Exception:
            pass


@router.callback_query(GameCallback.filter())
async def game_callback_handler(call: CallbackQuery, callback_data: GameCallback, deps: Deps) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö game –∫–æ–ª–ª–±–µ–∫–æ–≤"""
    try:
        await call.answer()
        
        action = callback_data.action
        logger.info(f"User {call.from_user.id} triggered game action: {action}")
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        await call.answer(f"–î–µ–π—Å—Ç–≤–∏–µ '{action}' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)
        
    except Exception as e:
        logger.error(f"Error in game_callback_handler: {e}", exc_info=True)
        await call.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞", show_alert=True)


logger.info("‚úÖ Game handler loaded")