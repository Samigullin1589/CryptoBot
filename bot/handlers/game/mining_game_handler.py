# ===============================================================
# –§–∞–π–ª: bot/handlers/game/mining_game_handler.py (–ü–†–û–î–ê–ö–®–ù-–í–ï–†–°–ò–Ø 2025)
# –û–ø–∏—Å–∞–Ω–∏–µ: "–¢–æ–Ω–∫–∏–π" –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–≥—Ä—ã "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ú–∞–π–Ω–∏–Ω–≥".
# –£–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø–æ –º–µ–Ω—é –∏ –≤—ã–∑—ã–≤–∞–µ—Ç MiningGameService.
# ===============================================================
import logging
from aiogram import F, Router, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from bot.config.settings import settings
# --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ---
from bot.services.mining_game_service import MiningGameService
# --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---
from bot.services.asic_service import AsicService
from bot.services.admin_service import AdminService
from bot.states.mining_states import MiningGameState
from bot.keyboards.mining_keyboards import (
    get_mining_menu_keyboard, get_shop_keyboard, get_my_farm_keyboard,
    get_withdraw_keyboard, get_electricity_menu_keyboard
)
from bot.utils.ui_helpers import show_main_menu_from_callback

game_router = Router()
logger = logging.getLogger(__name__)

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è ---

@game_router.callback_query(F.data == "nav:mining_game")
async def handle_mining_menu(call: CallbackQuery, state: FSMContext, admin_service: AdminService):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ú–∞–π–Ω–∏–Ω–≥'."""
    await state.clear()
    await admin_service.track_action("nav:mining_game")
    text = "üíé <b>–¶–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –ú–∞–π–Ω–∏–Ω–≥–æ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    await call.message.edit_text(text, reply_markup=get_mining_menu_keyboard())

# --- –ú–∞–≥–∞–∑–∏–Ω –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è ---

async def show_shop_page(call: CallbackQuery, asic_service: AsicService, page: int = 0):
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞–≥–∞–∑–∏–Ω–∞."""
    asics, _ = await asic_service.get_top_asics(count=1000, electricity_cost=0.0)
    if not asics:
        await call.message.edit_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.",
            reply_markup=get_mining_menu_keyboard()
        )
        return
    text = "üè™ <b>–ú–∞–≥–∞–∑–∏–Ω –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ ASIC –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Å—Å–∏–∏:"
    keyboard = get_shop_keyboard(asics, page)
    await call.message.edit_text(text, reply_markup=keyboard)

@game_router.callback_query(F.data == "game_nav:shop")
async def handle_shop_menu(call: CallbackQuery, asic_service: AsicService, admin_service: AdminService):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞–≥–∞–∑–∏–Ω–∞."""
    await admin_service.track_action("game_nav:shop")
    await call.message.edit_text("‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ...")
    await show_shop_page(call, asic_service, 0)

@game_router.callback_query(F.data.startswith("game_shop_page:"))
async def handle_shop_pagination(call: CallbackQuery, asic_service: AsicService):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é –≤ –º–∞–≥–∞–∑–∏–Ω–µ."""
    page = int(call.data.split(":")[2])
    await show_shop_page(call, asic_service, page)

# --- –õ–æ–≥–∏–∫–∞ –∏–≥—Ä—ã ---

@game_router.callback_query(F.data.startswith("game_action:start:"))
async def handle_start_mining(call: CallbackQuery, game_service: MiningGameService, asic_service: AsicService, admin_service: AdminService):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∞–π–Ω–∏–Ω–≥-—Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    asic_index = int(call.data.split(":")[2])
    
    result_text = await game_service.start_session(
        user_id=call.from_user.id,
        asic_index=asic_index
    )
    
    # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫
    if "‚úÖ" in result_text:
        all_asics, _ = await asic_service.get_top_asics(count=1000)
        if asic_index < len(all_asics):
            await admin_service.track_action(f"game_start:{all_asics[asic_index].name}")
    
    await call.message.edit_text(result_text, reply_markup=get_mining_menu_keyboard())

@game_router.callback_query(F.data == "game_nav:my_farm")
async def handle_my_farm(call: CallbackQuery, game_service: MiningGameService, admin_service: AdminService):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ."""
    await admin_service.track_action("game_nav:my_farm")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–¥–Ω–∏–º –≤—ã–∑–æ–≤–æ–º
    farm_info_text, user_stats_text = await game_service.get_farm_and_stats_info(call.from_user.id)
    
    full_text = f"{farm_info_text}\n\n{user_stats_text}"
    
    await call.message.edit_text(full_text, reply_markup=get_my_farm_keyboard())

# --- –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã ---

@game_router.callback_query(F.data == "game_action:withdraw")
async def handle_withdraw(call: CallbackQuery, game_service: MiningGameService, admin_service: AdminService):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤."""
    await admin_service.track_action("game_action:withdraw")
    
    result_text, can_withdraw = await game_service.process_withdrawal(call.from_user.id)
    
    if can_withdraw:
        await call.message.edit_text(result_text, reply_markup=get_withdraw_keyboard())
    else:
        await call.answer(result_text, show_alert=True)

@game_router.callback_query(F.data == "game_action:invite")
async def handle_invite_friend(call: CallbackQuery, bot: Bot, admin_service: AdminService):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É."""
    await admin_service.track_action("game_action:invite")
    
    bot_info = await bot.get_me()
    referral_link = f"https://t.me/{bot_info.username}?start={call.from_user.id}"
    
    text = (
        f"ü§ù <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
        f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞, –∏ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –∑–∞–ø—É—Å—Ç–∏—Ç –±–æ—Ç–∞ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ "
        f"<b>{settings.game.referral_bonus:.2f} –º–æ–Ω–µ—Ç</b>!\n\n"
        f"–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:\n"
        f"<code>{referral_link}</code>"
    )
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –Ω–µ –∑–∞–º–µ–Ω—è—Ç—å –º–µ–Ω—é
    await call.message.answer(text)

# --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–µ–π ---

@game_router.callback_query(F.data == "game_nav:electricity")
async def handle_electricity_menu(call: CallbackQuery, game_service: MiningGameService, admin_service: AdminService):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞–º–∏."""
    await admin_service.track_action("game_nav:electricity")
    
    text, keyboard = await game_service.get_electricity_menu(call.from_user.id)
    await call.message.edit_text(text, reply_markup=keyboard)

@game_router.callback_query(F.data.startswith("game_tariff_select:"))
async def handle_select_tariff(call: CallbackQuery, game_service: MiningGameService):
    """–í—ã–±–∏—Ä–∞–µ—Ç —Ç–∞—Ä–∏—Ñ."""
    tariff_name = call.data.split(":")[2]
    alert_text = await game_service.select_tariff(call.from_user.id, tariff_name)
    await call.answer(alert_text, show_alert=True)
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    text, keyboard = await game_service.get_electricity_menu(call.from_user.id)
    await call.message.edit_text(text, reply_markup=keyboard)

@game_router.callback_query(F.data.startswith("game_tariff_buy:"))
async def handle_buy_tariff(call: CallbackQuery, game_service: MiningGameService, admin_service: AdminService):
    """–ü–æ–∫—É–ø–∞–µ—Ç —Ç–∞—Ä–∏—Ñ."""
    tariff_name = call.data.split(":")[2]
    alert_text = await game_service.buy_tariff(call.from_user.id, tariff_name)
    await call.answer(alert_text, show_alert=True)
    
    if "üéâ" in alert_text: # –ï—Å–ª–∏ –ø–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞
        await admin_service.track_action(f"game_buy_tariff:{tariff_name}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
    text, keyboard = await game_service.get_electricity_menu(call.from_user.id)
    await call.message.edit_text(text, reply_markup=keyboard)
