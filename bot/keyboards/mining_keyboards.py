# ===============================================================
# –§–∞–π–ª: bot/keyboards/mining_keyboards.py (–ü–†–û–î–ê–ö–®–ù-–í–ï–†–°–ò–Ø 2025 - –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï)
# –û–ø–∏—Å–∞–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –∏–≥—Ä—ã "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ú–∞–π–Ω–∏–Ω–≥" –∏ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞.
# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ get_calculator_result_keyboard.
# ===============================================================

from typing import List
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from bot.utils.models import AsicMiner
from bot.utils.text_utils import normalize_asic_name
from .callback_factories import MenuCallback

PAGE_SIZE = 5

def get_mining_menu_keyboard(is_session_active: bool) -> InlineKeyboardMarkup:
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    builder = InlineKeyboardBuilder()
    if not is_session_active:
        builder.button(text="‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é", callback_data="game_nav:shop")
    builder.button(text="üè† –ú–æ—è —Ñ–µ—Ä–º–∞", callback_data="game_nav:my_farm")
    builder.button(text="üí° –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", callback_data="game_nav:electricity")
    builder.button(text="ü§ù –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="game_action:invite")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data=MenuCallback(level=0, action="main").pack())
    builder.adjust(1 if not is_session_active else 2, 2, 1)
    return builder.as_markup()

def get_my_farm_keyboard() -> InlineKeyboardMarkup:
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    builder = InlineKeyboardBuilder()
    builder.button(text="üí∞ –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞", callback_data="game_action:withdraw")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="nav:mining_game")
    builder.adjust(1)
    return builder.as_markup()

def get_withdraw_keyboard() -> InlineKeyboardMarkup:
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ü–æ–Ω—è—Ç–Ω–æ", callback_data="nav:mining_game")
    return builder.as_markup()

def get_calculator_cancel_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="calc_action:cancel")
    return builder.as_markup()

def get_currency_selection_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="USD ($)", callback_data="calc_currency:usd")
    builder.button(text="RUB (‚ÇΩ)", callback_data="calc_currency:rub")
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="calc_action:cancel"))
    builder.adjust(2)
    return builder.as_markup()

def get_asic_selection_keyboard(asics: List[AsicMiner], page: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    start_offset = page * PAGE_SIZE
    end_offset = start_offset + PAGE_SIZE

    for i, asic in enumerate(asics[start_offset:end_offset], start=start_offset):
        builder.button(text=asic.name, callback_data=f"calc_select_asic:{i}")

    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"calc_page:{page - 1}"))
    if end_offset < len(asics):
        nav_buttons.append(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"calc_page:{page + 1}"))
    
    builder.row(*nav_buttons)
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="calc_action:cancel"))
    builder.adjust(1)
    return builder.as_markup()

# –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
def get_calculator_result_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞—Å—á–µ—Ç–∞."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç", callback_data="nav:calculator")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data=MenuCallback(level=0, action="main").pack())
    builder.adjust(1)
    return builder.as_markup()