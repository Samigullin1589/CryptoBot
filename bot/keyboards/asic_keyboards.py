# ===============================================================
# –§–∞–π–ª: bot/keyboards/asic_keyboards.py (–ù–û–í–´–ô –§–ê–ô–õ)
# –û–ø–∏—Å–∞–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ ASIC-–º–∞–π–Ω–µ—Ä–æ–≤.
# ===============================================================

from typing import List
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup

from bot.utils.models import AsicMiner
from bot.utils.text_utils import normalize_asic_name

PAGE_SIZE = 5

def get_top_asics_keyboard(asics: List[AsicMiner], page: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    start_offset = (page - 1) * PAGE_SIZE
    end_offset = start_offset + PAGE_SIZE

    for asic in asics[start_offset:end_offset]:
        asic_id = normalize_asic_name(asic.name)
        builder.button(
            text=f"{asic.name} - ${asic.net_profit:.2f}/–¥–µ–Ω—å",
            callback_data=f"asic_passport:{asic_id}"
        )
    
    nav_row = []
    if page > 1:
        nav_row.append(builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"asic_page:{page - 1}"))
    if end_offset < len(asics):
        nav_row.append(builder.button(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"asic_page:{page + 1}"))
    
    builder.row(*nav_row)
    builder.row(
        builder.button(text="üí° –£–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—É —ç/—ç", callback_data="asic_action:set_cost"),
        builder.button(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="nav:main_menu")
    )
    builder.adjust(1)
    return builder.as_markup()

def get_asic_passport_keyboard(page: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=f"asic_page:{page}")
    return builder.as_markup()
