# bot/services/scheduler.py
import logging
from aiogram import Bot
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
from bot.config.settings import settings
from bot.services.news_service import NewsService
from bot.services.asic_service import AsicService

logger = logging.getLogger(__name__)

async def send_news_job(bot: Bot, news_service: NewsService):
    """–ó–∞–¥–∞—á–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç NewsService."""
    if not settings.news_chat_id: return
    logger.info("Executing scheduled news job...")
    try:
        news = await news_service.fetch_latest_news()
        if not news: return
        text = "üì∞ <b>–ö—Ä–∏–ø—Ç–æ-–Ω–æ–≤–æ—Å—Ç–∏ (–∞–≤—Ç–æ):</b>\n\n" + "\n".join([f"üîπ <a href=\"{n['link']}\">{n['title']}</a>" for n in news])
        await bot.send_message(settings.news_chat_id, text, disable_web_page_preview=True)
        logger.info(f"News sent to chat {settings.news_chat_id}.")
    except Exception as e:
        logger.error("Error in send_news_job", extra={'error': str(e)})

async def update_asics_cache_job(asic_service: AsicService):
    """–ó–∞–¥–∞—á–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ ASIC, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç AsicService."""
    logger.info("Executing scheduled ASIC cache update job...")
    try:
        # –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥. –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @cached —Å–∞–º –æ–±–Ω–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ TTL –∏—Å—Ç–µ–∫.
        await asic_service.get_profitable_asics()
    except Exception as e:
        logger.error("Error in update_asics_cache_job", extra={'error': str(e)})


def setup_scheduler(bot: Bot, news_service: NewsService, asic_service: AsicService) -> AsyncIOScheduler:
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å –Ω—É–∂–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏."""
    scheduler = AsyncIOScheduler(timezone="UTC")
    
    # –ó–∞–¥–∞—á–∞ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π, –ø–µ—Ä–µ–¥–∞–µ–º news_service
    if settings.news_chat_id:
        scheduler.add_job(
            send_news_job, 
            'interval', 
            hours=settings.news_interval_hours, 
            args=(bot, news_service)
        )
    
    # –ó–∞–¥–∞—á–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ ASIC, –ø–µ—Ä–µ–¥–∞–µ–º asic_service
    scheduler.add_job(
        update_asics_cache_job, 
        'interval', 
        hours=settings.asic_cache_update_hours, 
        args=(asic_service,)
    )
    
    logger.info("Scheduler configured.")
    return scheduler
