# ===============================================================
# –§–∞–π–ª: bot/services/moderation_service.py (–ü–†–û–î–ê–ö–®–ù-–í–ï–†–°–ò–Ø 2025 - –ü–û–õ–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø)
# –û–ø–∏—Å–∞–Ω–∏–µ: –°–µ—Ä–≤–∏—Å, –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É—é—â–∏–π –≤—Å—é –ª–æ–≥–∏–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏:
#           –±–∞–Ω, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, —Ä–∞–±–æ—Ç–∞ —Å–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞–º–∏ –∏
#           —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
# ===============================================================
import logging
from typing import List, Optional
from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message

from bot.services.user_service import UserService
from bot.services.admin_service import AdminService
from bot.services.stop_word_service import StopWordService
from bot.config.settings import ThreatFilterConfig
from bot.utils.models import UserRole
from bot.keyboards.threat_keyboards import get_threat_notification_keyboard

logger = logging.getLogger(__name__)

class ModerationService:
    """–û—Ä–∫–µ—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π —á–∞—Ç–∞."""

    def __init__(self, bot: Bot, user_service: UserService, admin_service: AdminService,
                 stop_word_service: StopWordService, config: ThreatFilterConfig):
        self.bot = bot
        self.user_service = user_service
        self.admin_service = admin_service
        self.stop_word_service = stop_word_service
        self.config = config

    async def ban_user(self, admin_id: int, target_user_id: int, target_chat_id: int,
                       reason: str, original_message: Optional[Message] = None) -> str:
        """–ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É–¥–∞–ª—è–µ—Ç –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ–± —ç—Ç–æ–º."""
        try:
            await self.bot.ban_chat_member(chat_id=target_chat_id, user_id=target_user_id)
            logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {admin_id} –∑–∞–±–∞–Ω–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id} –≤ —á–∞—Ç–µ {target_chat_id} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}")
            
            if original_message:
                await original_message.delete()
            
            await self.user_service.update_user_role(target_user_id, UserRole.BANNED)
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user_id} —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}"
        except TelegramBadRequest as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id}: {e.message}")
            return f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í–æ–∑–º–æ–∂–Ω–æ, —É –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        except Exception as e:
            logger.error(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id}: {e}", exc_info=True)
            return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –±–∞–Ω–∞."

    async def process_detected_threat(self, message: Message, threat_score: float, reasons: List[str]):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–≥—Ä–æ–∑—É, –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—É—é —Ñ–∏–ª—å—Ç—Ä–æ–º."""
        user = message.from_user
        if not user: return

        # –õ–æ–≥–∏–∫–∞ —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–æ–≤–µ—Ä–∏—è (–µ—Å–ª–∏ –æ–Ω–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ UserService)
        # await self.user_service.log_violation(...)

        reasons_text = "\n".join([f"‚Ä¢ {r}" for r in reasons])
        admin_alert = (
            f"üö® <b>–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —É–≥—Ä–æ–∑–∞!</b> üö®\n\n"
            f"<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href='tg://user?id={user.id}'>{user.full_name}</a> (@{user.username})\n"
            f"<b>ID:</b> <code>{user.id}</code>\n"
            f"<b>–ß–∞—Ç ID:</b> <code>{message.chat.id}</code>\n"
            f"<b>–ë–∞–ª–ª —É–≥—Ä–æ–∑—ã:</b> {threat_score:.2f}\n"
            f"<b>–ü—Ä–∏—á–∏–Ω—ã:</b>\n{reasons_text}\n\n"
            f"<i>–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.</i>"
        )
        
        keyboard = get_threat_notification_keyboard(user.id, message.chat.id, message.message_id)
        await self.admin_service.notify_admins(admin_alert, reply_markup=keyboard)

    # --- –ú–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–æ–ø-—Å–ª–æ–≤–∞–º–∏ ---
    async def add_stop_word(self, word: str) -> str:
        success = await self.stop_word_service.add_stop_word(word)
        return f"‚úÖ –°–ª–æ–≤–æ ¬´{word}¬ª –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç." if success else f"‚ÑπÔ∏è –°–ª–æ–≤–æ ¬´{word}¬ª —É–∂–µ –±—ã–ª–æ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ."

    async def remove_stop_word(self, word: str) -> str:
        success = await self.stop_word_service.remove_stop_word(word)
        return f"‚úÖ –°–ª–æ–≤–æ ¬´{word}¬ª —É–¥–∞–ª–µ–Ω–æ –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞." if success else f"‚ö†Ô∏è –°–ª–æ–≤–æ ¬´{word}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ."

    async def list_stop_words(self) -> str:
        words = await self.stop_word_service.get_all_stop_words()
        if not words:
            return "üö´ –°—Ç–æ–ø-–ª–∏—Å—Ç –ø—É—Å—Ç."
        return "<b>–¢–µ–∫—É—â–∏–π —Å—Ç–æ–ø-–ª–∏—Å—Ç:</b>\n\n" + ", ".join(f"<code>{word}</code>" for word in words)