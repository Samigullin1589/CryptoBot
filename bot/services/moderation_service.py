# ===============================================================
# –§–∞–π–ª: bot/services/moderation_service.py (–ü–†–û–î–ê–ö–®–ù-–í–ï–†–°–ò–Ø 2025)
# –û–ø–∏—Å–∞–Ω–∏–µ: –°–µ—Ä–≤–∏—Å, –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É—é—â–∏–π –≤—Å—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É
# –¥–ª—è –∫–æ–º–∞–Ω–¥ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (–±–∞–Ω, –º—É—Ç, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ —Ç.–¥.).
# ===============================================================
import logging
from datetime import datetime, timedelta
from typing import Optional

from aiogram import Bot
from aiogram.enums import ChatMemberStatus
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message

from bot.filters.access_filters import UserRole
# --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã ---
from bot.services.security_service import SecurityService
from bot.services.stop_word_service import StopWordService
# --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---
from bot.services.user_service import UserService
from bot.utils.text_utils import sanitize_html, parse_duration

logger = logging.getLogger(__name__)

class ModerationService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏."""

    def __init__(
        self,
        bot: Bot,
        user_service: UserService,
        # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∏–Ω–∏–º–∞–µ–º –Ω–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ---
        security_service: SecurityService,
        stop_word_service: StopWordService
        # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---
    ):
        self.bot = bot
        self.user_service = user_service
        # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ---
        self.security_service = security_service
        self.stop_word_service = stop_word_service
        # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---

    async def ban_user(self, admin_id: int, target_user_id: int, target_chat_id: int, reason: str, original_message: Optional[Message] = None) -> str:
        """
        –ë–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ.

        :param admin_id: ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –≤—ã–ø–æ–ª–Ω—è—é—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–µ.
        :param target_user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å.
        :param target_chat_id: ID —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å.
        :param reason: –ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞.
        :param original_message: –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–ø–∞–º-—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è AI.
        :return: –°—Ç—Ä–æ–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–ø–µ—Ä–∞—Ü–∏–∏.
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            target_member = await self.bot.get_chat_member(target_chat_id, target_user_id)
            if target_member.status in [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR]:
                return "üòÖ –ù–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–∞—Ç–∞."

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞
            bot_member = await self.bot.get_chat_member(target_chat_id, self.bot.id)
            if not bot_member.can_restrict_members:
                return f"‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤–∞ –±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ <code>{target_chat_id}</code>."

            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–Ω–∞
            await self.bot.ban_chat_member(chat_id=target_chat_id, user_id=target_user_id, revoke_messages=True)
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –Ω–∞—à–µ–π –ë–î
            await self.user_service.update_user_role(target_user_id, target_chat_id, UserRole.BANNED)
            logger.info(f"Admin {admin_id} banned {target_user_id} in chat {target_chat_id}. Reason: {reason}")
            
            # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ ---
            if original_message:
                await self.security_service.learn_from_spam(original_message, "admin_ban")
            # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –±–∞–Ω–µ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            try:
                chat_info = await self.bot.get_chat(target_chat_id)
                await self.bot.send_message(
                    target_user_id,
                    f"‚ùóÔ∏è –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –≤ —á–∞—Ç–µ ¬´<b>{sanitize_html(chat_info.title)}</b>¬ª.\n\n"
                    f"<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {sanitize_html(reason)}"
                )
            except Exception:
                logger.warning(f"Failed to notify user {target_user_id} about ban.")
            
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>{target_user_id}</code> —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω –≤ —á–∞—Ç–µ <code>{target_chat_id}</code>."

        except TelegramBadRequest as e:
            if "user not found" in e.message.lower():
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–µ –≤ —á–∞—Ç–µ, –≤—Å–µ —Ä–∞–≤–Ω–æ –º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –≤–µ—Ä–Ω—É–ª—Å—è
                 await self.bot.ban_chat_member(chat_id=target_chat_id, user_id=target_user_id, revoke_messages=False)
                 return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>{target_user_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á–∞—Ç–µ, –Ω–æ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –ø—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω–æ."
            logger.error(f"Telegram API error while banning user {target_user_id}: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ Telegram –ø—Ä–∏ –±–∞–Ω–µ: {e.message}"
        except Exception as e:
            logger.exception(f"Unexpected error while banning user {target_user_id}")
            return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."

    # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ warn, mute, –∏ —Ç.–¥.)

    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–µ–ª–µ–≥–∏—Ä—É–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞–º–∏ –≤ StopWordService ---
    async def add_stop_word(self, word: str) -> str:
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç–æ–ø-—Å–ª–æ–≤–æ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å."""
        success = await self.stop_word_service.add_stop_word(word)
        if success:
            return f"‚úÖ –°–ª–æ–≤–æ '<code>{word}</code>' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç."
        else:
            return f"‚ö†Ô∏è –°–ª–æ–≤–æ '<code>{word}</code>' —É–∂–µ –±—ã–ª–æ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ."

    async def remove_stop_word(self, word: str) -> str:
        """–£–¥–∞–ª—è–µ—Ç —Å—Ç–æ–ø-—Å–ª–æ–≤–æ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å."""
        success = await self.stop_word_service.remove_stop_word(word)
        if success:
            return f"‚úÖ –°–ª–æ–≤–æ '<code>{word}</code>' —É–¥–∞–ª–µ–Ω–æ."
        else:
            return f"‚ö†Ô∏è –°–ª–æ–≤–æ '<code>{word}</code>' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ."

    async def list_stop_words(self) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å."""
        words = await self.stop_word_service.get_all_stop_words()
        if not words:
            return "üö´ –°—Ç–æ–ø-–ª–∏—Å—Ç –ø—É—Å—Ç."
        return "üìú –¢–µ–∫—É—â–∏–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞:\n\n" + "\n".join([f"‚Ä¢ <code>{word}</code>" for word in words])
    # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---
