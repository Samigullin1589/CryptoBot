import logging
from bot.utils import dependencies
from bot.config.settings import settings

logger = logging.getLogger(__name__)

# –ó–∞–¥–∞—á–∏ —Ç–µ–ø–µ—Ä—å –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
# –û–Ω–∏ —Å–∞–º–∏ –∑–Ω–∞—é—Ç, –≥–¥–µ –≤–∑—è—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ.

async def send_news_job():
    """–ó–∞–¥–∞—á–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π."""
    logger.info("Executing scheduled news job...")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è
        bot = dependencies.bot
        news_service = dependencies.news_service

        if not bot or not news_service:
            logger.warning("send_news_job skipped: dependencies not initialized.")
            return

        if not settings.news_chat_id:
            return
            
        news = await news_service.fetch_latest_news()
        if not news:
            return
        text = "üì∞ <b>–ö—Ä–∏–ø—Ç–æ-–Ω–æ–≤–æ—Å—Ç–∏ (–∞–≤—Ç–æ):</b>\n\n" + "\n".join(
            [f"üîπ <a href=\"{n['link']}\">{n['title']}</a>" for n in news]
        )
        await bot.send_message(settings.news_chat_id, text, disable_web_page_preview=True)
        logger.info(f"News sent to chat {settings.news_chat_id}.")
    except Exception as e:
        logger.error("Error in send_news_job", extra={'error': str(e)})


async def update_asics_cache_job():
    """–ó–∞–¥–∞—á–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ ASIC."""
    logger.info("Executing scheduled ASIC cache update job...")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è
        asic_service = dependencies.asic_service
        if not asic_service:
            logger.warning("update_asics_cache_job skipped: asic_service not initialized.")
            return

        await asic_service.get_profitable_asics()
    except Exception as e:
        logger.error("Error in update_asics_cache_job", extra={'error': str(e)})